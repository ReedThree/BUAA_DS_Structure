function(testDoubleLinkedList part result)
add_executable(DoubleLinkedList_${part} ${part}.c)
target_link_libraries(DoubleLinkedList_${part} PRIVATE asan ubsan structure_compiler_flags Trace DoubleLinkedList)
add_test(NAME testDoubleLinkedList_${part} COMMAND DoubleLinkedList_${part})
set_tests_properties(testDoubleLinkedList_${part} PROPERTIES PASS_REGULAR_EXPRESSION ${result})
endfunction()

testDoubleLinkedList("testInsertIndex" "Len = 5\n{c = 1, p = 5}, {c = 2, p = 4}, {c = 3, p = 3}, {c = 4, p = 2}, {c = 5, p = 1}\n{c = 5, p = 1}, {c = 4, p = 2}, {c = 3, p = 3}, {c = 2, p = 4}, {c = 1, p = 5}")
testDoubleLinkedList("testInsertAfter" "Len = 7\n{c = 1, p = 5}, {c = 0, p = 6}, {c = 2, p = 4}, {c = 3, p = 3}, {c = 4, p = 2}, {c = 5, p = 1}, {c = 0, p = 6}\n{c = 0, p = 6}, {c = 5, p = 1}, {c = 4, p = 2}, {c = 3, p = 3}, {c = 2, p = 4}, {c = 0, p = 6}, {c = 1, p = 5}")
testDoubleLinkedList("testInsertBefore" "Len = 7\n{c = 0, p = 6}, {c = 1, p = 5}, {c = 2, p = 4}, {c = 3, p = 3}, {c = 4, p = 2}, {c = 0, p = 6}, {c = 5, p = 1}\n{c = 5, p = 1}, {c = 0, p = 6}, {c = 4, p = 2}, {c = 3, p = 3}, {c = 2, p = 4}, {c = 1, p = 5}, {c = 0, p = 6}")
testDoubleLinkedList("testInsertIndexReversed" "Len = 5\n{c = 5, p = 1}, {c = 4, p = 2}, {c = 3, p = 3}, {c = 2, p = 4}, {c = 1, p = 5}\n{c = 1, p = 5}, {c = 2, p = 4}, {c = 3, p = 3}, {c = 4, p = 2}, {c = 5, p = 1}")
testDoubleLinkedList("testInsertOrdered" "Len = 5\n{c = 5, p = 1}, {c = 4, p = 2}, {c = 3, p = 3}, {c = 2, p = 4}, {c = 1, p = 5}\n{c = 1, p = 5}, {c = 2, p = 4}, {c = 3, p = 3}, {c = 4, p = 2}, {c = 5, p = 1}")
testDoubleLinkedList("testForEach" "12345\n54321")
testDoubleLinkedList("testSearch" "Len = 6\n{c = 5, p = 1}, {c = 4, p = 2}, {c = 4, p = 3}, {c = 2, p = 4}, {c = 1, p = 5}, {c = 5, p = 3}\n{c = 5, p = 3}, {c = 1, p = 5}, {c = 2, p = 4}, {c = 4, p = 3}, {c = 4, p = 2}, {c = 5, p = 1}")
testDoubleLinkedList("testDelete" "Len = 3\n{c = 4, p = 2}, {c = 3, p = 3}, {c = 1, p = 5}\n{c = 1, p = 5}, {c = 3, p = 3}, {c = 4, p = 2}")
testDoubleLinkedList("testGet" "{c = 3, p = 3}\n2")
testDoubleLinkedList("testPushPop" "Len = 7\n{c = 5, p = 1}, {c = 4, p = 2}, {c = 3, p = 3}, {c = 2, p = 4}, {c = 1, p = 5}, {c = -2, p = 8}, {c = -3, p = 9}\n{c = -3, p = 9}, {c = -2, p = 8}, {c = 1, p = 5}, {c = 2, p = 4}, {c = 3, p = 3}, {c = 4, p = 2}, {c = 5, p = 1}\n{c = -3, p = 9}\n{c = -2, p = 8}\nLen = 5\n{c = 5, p = 1}, {c = 4, p = 2}, {c = 3, p = 3}, {c = 2, p = 4}, {c = 1, p = 5}")